<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
		<style type="text/css">
			html { height: 100% }
			body { height: 100%; margin: 0; padding: 0 }
			#map-canvas { height: 90% }
		</style>
		<script type="text/javascript"
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDgiFfn7sq6RQy2gXG7BEyxr5qBdkPq_2s">
        </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js">
    </script>
    <script type="text/javascript">
        var map
        google.maps.event.addDomListener(window, 'load', initialize)

        function zoomToObject(points){
            var bounds = new google.maps.LatLngBounds()
            for (var n = 0; n < points.length ; n++){
                bounds.extend(points[n]);
            }
            map.fitBounds(bounds);
            setTimeout(function() {
                        google.maps.event.trigger(map,'resize');
                        map.fitBounds(bounds)
                        }, 200);
        }

        function initialize() 
        {      
                            // Initialize our Google map
            var mapOptions = {
                center: new google.maps.LatLng(0, 0),
                zoom: 5,
                mapTypeId: google.maps.MapTypeId.HYBRID
            };

            // Generate the actual map
            map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

            var xmlhttp = new XMLHttpRequest();
            var url = "http://track-my-trip-dot-minecraft-161209.appspot.com/summaries?prefix="+document.getElementById("activities").value;
            console.log('initialize' + url)

            xmlhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
    
                    var returnValue = JSON.parse(this.responseText);
                    var polylines = returnValue.polylines;
                    var distance = returnValue.distance;
                    var elevation = returnValue.elevation;
                    
                    var points = []

                    polylines.forEach(function(coords) {
                        var polyline = []
                        coords.forEach(function(element) {
                            polyline.push(new google.maps.LatLng(element[0],element[1]))
                            points.push(new google.maps.LatLng(element[0],element[1]))
                        }, this);
                       
                        var flightPath = new google.maps.Polyline({
                            path: polyline,
                            geodesic: true,
                            strokeColor: '#FF0000',
                            strokeOpacity: 1.0,
                            strokeWeight: 2
                        });
                        console.log('flightPath')
                        flightPath.setMap(map);

                    })
                    zoomToObject(points); 
                }
            }
            xmlhttp.open("GET", url, true);
            xmlhttp.send();
  
            var photoshttp = new XMLHttpRequest();
            var photosurl = "http://track-my-trip-dot-minecraft-161209.appspot.com/photos?prefix="+document.getElementById("activities").value;
             
            photoshttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    // console.log('res='+this.responseText)
                    var photos = JSON.parse(this.responseText);

                    photos.forEach(function(photo) {
                       
                           // create an invisible marker
                        var image = {
                            url: photo.urls[0],
                            // This marker is 20 pixels wide by 32 pixels high.
                            size: new google.maps.Size(photo.sizes[0][0], photo.sizes[0][1]),
                            // The origin for this image is (0, 0).
                            origin: new google.maps.Point(0, 0),
                            // The anchor for this image is the base of the flagpole at (0, 32).
                            anchor: new google.maps.Point(0, photo.sizes[0][1])
                        };   
                        console.log('url=',photo.urls[0])
                        var labelMarker = new google.maps.Marker({
                            position: new google.maps.LatLng(photo.location[0],photo.location[1]), 
                            icon: image,
                            title:"Hello World!"
                        });
                        labelMarker.setMap(map)
                               
                    })
                } 
            }
            photoshttp.open("GET", photosurl, true);
            photoshttp.send();
        }
    </script>
	</head>
	<body>
    <select id="activities" onchange="initialize()">
        <option value="Nong Khai">Nong Khai</option> 
        <option value="Europe" selected>Europe</option>
        <option value="Stavanger">Stavanger</option>
        <option value="Prachuap">Prachuap</option>
        <option value="Texas">Texas</option>
        <option value="Southeast Asia">Southeast Asia</option>
        <option value="First Trip">First Trip</option>
        <option value="For the King">For the King</option>

    </select>
    <div id="map-canvas"/>
	</body>
</html>